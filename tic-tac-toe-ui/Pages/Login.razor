@page "/login"
@using System.Net.Http.Json
@using tic_tac_toe_ui.Models
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<h3>Вход</h3>

<div>
    <input @bind="username" placeholder="Имя пользователя" />
    <input @bind="password" type="password" placeholder="Пароль" />
    <button @onclick="LoginUser">Войти</button>
    <p>Нет аккаунта? <a href="/register">Зарегистрироваться</a></p>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <p style="color: red;">@errorMessage</p>
    }
</div>

@code {
    private string username = "";
    private string password = "";
    private string errorMessage = "";

    private async Task LoginUser()
    {
        errorMessage = "";
        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/login", new LoginRequest
                {
                    Username = username,
                    Password = password
                });

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "accessToken", result.AccessToken);
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "refreshToken", result.RefreshToken);
                Navigation.NavigateTo("/game");
            }
            else
            {
                errorMessage = "Ошибка входа: " + await response.Content.ReadAsStringAsync();
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Ошибка: {ex.Message}";
        }
    }
}